// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AddressesColumns holds the columns for the "addresses" table.
	AddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "street_name", Type: field.TypeString},
		{Name: "number", Type: field.TypeString},
		{Name: "floor", Type: field.TypeString, Nullable: true},
		{Name: "postal_code", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "invoice_address", Type: field.TypeBool, Default: false},
		{Name: "service_address", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "contacts_addresses", Type: field.TypeInt},
	}
	// AddressesTable holds the schema information for the "addresses" table.
	AddressesTable = &schema.Table{
		Name:       "addresses",
		Columns:    AddressesColumns,
		PrimaryKey: []*schema.Column{AddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "addresses_contacts_addresses",
				Columns:    []*schema.Column{AddressesColumns[9]},
				RefColumns: []*schema.Column{ContactsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ContactsColumns holds the columns for the "contacts" table.
	ContactsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "telefone", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "vat", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ContactsTable holds the schema information for the "contacts" table.
	ContactsTable = &schema.Table{
		Name:       "contacts",
		Columns:    ContactsColumns,
		PrimaryKey: []*schema.Column{ContactsColumns[0]},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_source", Type: field.TypeString},
		{Name: "file_name", Type: field.TypeString},
		{Name: "file_url", Type: field.TypeString, Nullable: true},
		{Name: "prompt_used", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "type", Type: field.TypeString},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
	}
	// FilesContactsColumns holds the columns for the "files_contacts" table.
	FilesContactsColumns = []*schema.Column{
		{Name: "files_id", Type: field.TypeInt},
		{Name: "contacts_id", Type: field.TypeInt},
	}
	// FilesContactsTable holds the schema information for the "files_contacts" table.
	FilesContactsTable = &schema.Table{
		Name:       "files_contacts",
		Columns:    FilesContactsColumns,
		PrimaryKey: []*schema.Column{FilesContactsColumns[0], FilesContactsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "files_contacts_files_id",
				Columns:    []*schema.Column{FilesContactsColumns[0]},
				RefColumns: []*schema.Column{FilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "files_contacts_contacts_id",
				Columns:    []*schema.Column{FilesContactsColumns[1]},
				RefColumns: []*schema.Column{ContactsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AddressesTable,
		ContactsTable,
		FilesTable,
		FilesContactsTable,
	}
)

func init() {
	AddressesTable.ForeignKeys[0].RefTable = ContactsTable
	FilesContactsTable.ForeignKeys[0].RefTable = FilesTable
	FilesContactsTable.ForeignKeys[1].RefTable = ContactsTable
}
